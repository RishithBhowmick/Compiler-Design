Terminals unused in grammar

    T_AND
    T_WRITE
    T_BIT_LEFT_SHIFT
    T_BIT_RIGHT_SHIFT


State 125 conflicts: 6 shift/reduce
State 208 conflicts: 5 shift/reduce
State 214 conflicts: 1 shift/reduce
State 222 conflicts: 4 shift/reduce
State 224 conflicts: 4 shift/reduce


Grammar

    0 $accept: startProg $end

    1 startProg: program

    2 program: programHeading block '.'

    3 programHeading: T_PROGRAM T_IDENTIFIER ';'

    4 block: uses_block const_block type_block variable_block function_and_procedure_block execution_block

    5 uses_block: T_USES T_IDENTIFIER other_libs ';'
    6           | %empty

    7 other_libs: ',' T_IDENTIFIER other_libs
    8           | %empty

    9 const_block: T_CONST const_definition
   10            | %empty

   11 const_definition: T_IDENTIFIER T_SINGLEEQ constant ';' more_const_definition

   12 constant: T_INTVAL
   13         | T_BOOLVAL
   14         | T_FLOATVAL

   15 more_const_definition: T_IDENTIFIER T_SINGLEEQ constant ';' more_const_definition
   16                      | %empty

   17 type_block: T_TYPE type_definition
   18           | %empty

   19 $@1: %empty

   20 $@2: %empty

   21 type_definition: T_IDENTIFIER $@1 more_type_identifiers T_SINGLEEQ T_DATATYPE $@2 ';' type_definition
   22                | %empty

   23 $@3: %empty

   24 more_type_identifiers: ',' T_IDENTIFIER $@3 more_type_identifiers
   25                      | %empty

   26 variable_block: T_VAR decl_stmts
   27               | %empty

   28 $@4: %empty

   29 decl_stmts: T_IDENTIFIER $@4 more_decl_stmt ':' data_type ';'
   30           | %empty

   31 $@5: %empty

   32 more_decl_stmt: ',' T_IDENTIFIER $@5 more_decl_stmt
   33               | %empty

   34 data_type: T_TYPE
   35          | T_IDENTIFIER
   36          | T_ARRAY '[' T_INDEXTYPE ']' T_OF T_DATATYPE

   37 function_and_procedure_block: function_block function_and_procedure_block
   38                             | procedure_block function_and_procedure_block
   39                             | %empty

   40 $@6: %empty

   41 procedure_block: T_PROCEDURE T_IDENTIFIER $@6 ';' block ';'

   42 $@7: %empty

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@7 '(' param_list ')' ';' block ';'

   44 param_list: T_IDENTIFIER ':' T_DATATYPE
   45           | T_IDENTIFIER ':' T_DATATYPE ';' param_list
   46           | %empty

   47 $@8: %empty

   48 function_block: T_FUNCTION T_IDENTIFIER $@8 ':' T_DATATYPE ';' block ';'

   49 $@9: %empty

   50 function_block: T_FUNCTION T_IDENTIFIER $@9 '(' function_param_list ')' ':' T_DATATYPE ';' block ';'

   51 $@10: %empty

   52 $@11: %empty

   53 function_param_list: T_IDENTIFIER $@10 more_func_identifiers ':' T_DATATYPE $@11 function_param_continue

   54 function_param_continue: ';' function_param_list
   55                        | %empty

   56 $@12: %empty

   57 more_func_identifiers: ',' T_IDENTIFIER $@12 more_func_identifiers
   58                      | %empty

   59 execution_block: T_BEGIN execution_body T_END

   60 execution_body: execution_body assignment_statements
   61               | execution_body if_statement
   62               | execution_body fordo_statement
   63               | execution_body print_statements
   64               | %empty

   65 print_statements: T_WRITELN '(' T_STRINGVAL ')' ';'

   66 $@13: %empty

   67 assignment_statements: T_IDENTIFIER $@13 assignment_operators expression

   68 expression: simpleExpression
   69           | simpleExpression T_SINGLEEQ simpleExpression
   70           | simpleExpression T_NE simpleExpression
   71           | simpleExpression '<' simpleExpression
   72           | simpleExpression T_LE simpleExpression
   73           | simpleExpression '>' simpleExpression
   74           | simpleExpression T_GE simpleExpression

   75 simpleExpression: term
   76                 | simpleExpression '+' term
   77                 | simpleExpression '-' term
   78                 | simpleExpression T_BOOL_OR term
   79                 | simpleExpression '|' term
   80                 | simpleExpression '!' term

   81 term: factor
   82     | term '*' factor
   83     | term '/' factor
   84     | term '%' factor
   85     | term T_BOOL_AND factor
   86     | term '&' factor

   87 factor: '(' expression ')'
   88       | '+' factor
   89       | '-' factor
   90       | T_BOOL_NOT factor
   91       | value
   92       | T_IDENTIFIER

   93 value: T_INTVAL
   94      | T_FLOATVAL
   95      | T_BOOLVAL
   96      | T_STRINGVAL

   97 assignment_operators: T_ASOP
   98                     | T_AS_PE
   99                     | T_AS_SE
  100                     | T_AS_MULE
  101                     | T_AS_DIVE

  102 relational_operators: T_SINGLEEQ
  103                     | '>'
  104                     | '<'
  105                     | T_GE
  106                     | T_LE
  107                     | T_NE

  108 if_statement: T_IF '(' boolean_expression ')' T_THEN execution_body if_then_follow

  109 if_then_follow: else_if_block
  110               | else_block
  111               | %empty

  112 else_if_block: T_ELSE if_statement

  113 else_block: T_ELSE execution_body

  114 fordo_statement: T_FOR T_IDENTIFIER T_ASOP expression to_or_downto expression T_DO execution_body

  115 to_or_downto: T_TO
  116             | T_DOWNTO

  117 boolean_expression: expression relational_operators expression


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 80
    '%' (37) 84
    '&' (38) 86
    '(' (40) 43 50 65 87 108
    ')' (41) 43 50 65 87 108
    '*' (42) 82
    '+' (43) 76 88
    ',' (44) 7 24 32 57
    '-' (45) 77 89
    '.' (46) 2
    '/' (47) 83
    ':' (58) 29 44 45 48 50 53
    ';' (59) 3 5 11 15 21 29 41 43 45 48 50 54 65
    '<' (60) 71 104
    '>' (62) 73 103
    '[' (91) 36
    ']' (93) 36
    '|' (124) 79
    error (256)
    T_PROGRAM (258) 3
    T_IDENTIFIER <str> (259) 3 5 7 11 15 21 24 29 32 35 41 43 44 45 48 50 53 57 67 92 114
    T_USES (260) 5
    T_TYPE (261) 17 34
    T_VAR (262) 26
    T_BEGIN (263) 59
    T_END (264) 59
    T_FUNCTION (265) 48 50
    T_PROCEDURE (266) 41 43
    T_AND (267)
    T_ARRAY (268) 36
    T_OF (269) 36
    T_CONST (270) 9
    T_IF (271) 108
    T_THEN (272) 108
    T_ELSE (273) 112 113
    T_FOR (274) 114
    T_TO (275) 115
    T_DOWNTO (276) 116
    T_DO (277) 114
    T_WRITE (278)
    T_WRITELN (279) 65
    T_INDEXTYPE (280) 36
    T_SINGLEEQ (281) 11 15 21 69 102
    T_INTVAL <intval> (282) 12 93
    T_BOOLVAL <intval> (283) 13 95
    T_FLOATVAL <floatval> (284) 14 94
    T_STRINGVAL <str> (285) 65 96
    T_DATATYPE <type> (286) 21 36 44 45 48 50 53
    T_ASOP (287) 97 114
    T_AS_PE (288) 98
    T_AS_SE (289) 99
    T_AS_MULE (290) 100
    T_AS_DIVE (291) 101
    T_GE (292) 74 105
    T_LE (293) 72 106
    T_NE (294) 70 107
    T_BOOL_AND (295) 85
    T_BOOL_OR (296) 78
    T_BOOL_NOT (297) 90
    T_BIT_LEFT_SHIFT (298)
    T_BIT_RIGHT_SHIFT (299)


Nonterminals, with rules where they appear

    $accept (63)
        on left: 0
    startProg (64)
        on left: 1
        on right: 0
    program (65)
        on left: 2
        on right: 1
    programHeading (66)
        on left: 3
        on right: 2
    block (67)
        on left: 4
        on right: 2 41 43 48 50
    uses_block (68)
        on left: 5 6
        on right: 4
    other_libs (69)
        on left: 7 8
        on right: 5 7
    const_block (70)
        on left: 9 10
        on right: 4
    const_definition (71)
        on left: 11
        on right: 9
    constant (72)
        on left: 12 13 14
        on right: 11 15
    more_const_definition (73)
        on left: 15 16
        on right: 11 15
    type_block (74)
        on left: 17 18
        on right: 4
    type_definition (75)
        on left: 21 22
        on right: 17 21
    $@1 (76)
        on left: 19
        on right: 21
    $@2 (77)
        on left: 20
        on right: 21
    more_type_identifiers (78)
        on left: 24 25
        on right: 21 24
    $@3 (79)
        on left: 23
        on right: 24
    variable_block (80)
        on left: 26 27
        on right: 4
    decl_stmts (81)
        on left: 29 30
        on right: 26
    $@4 (82)
        on left: 28
        on right: 29
    more_decl_stmt (83)
        on left: 32 33
        on right: 29 32
    $@5 (84)
        on left: 31
        on right: 32
    data_type (85)
        on left: 34 35 36
        on right: 29
    function_and_procedure_block (86)
        on left: 37 38 39
        on right: 4 37 38
    procedure_block (87)
        on left: 41 43
        on right: 38
    $@6 (88)
        on left: 40
        on right: 41
    $@7 (89)
        on left: 42
        on right: 43
    param_list (90)
        on left: 44 45 46
        on right: 43 45
    function_block (91)
        on left: 48 50
        on right: 37
    $@8 (92)
        on left: 47
        on right: 48
    $@9 (93)
        on left: 49
        on right: 50
    function_param_list (94)
        on left: 53
        on right: 50 54
    $@10 (95)
        on left: 51
        on right: 53
    $@11 (96)
        on left: 52
        on right: 53
    function_param_continue (97)
        on left: 54 55
        on right: 53
    more_func_identifiers (98)
        on left: 57 58
        on right: 53 57
    $@12 (99)
        on left: 56
        on right: 57
    execution_block (100)
        on left: 59
        on right: 4
    execution_body (101)
        on left: 60 61 62 63 64
        on right: 59 60 61 62 63 108 113 114
    print_statements (102)
        on left: 65
        on right: 63
    assignment_statements (103)
        on left: 67
        on right: 60
    $@13 (104)
        on left: 66
        on right: 67
    expression (105)
        on left: 68 69 70 71 72 73 74
        on right: 67 87 114 117
    simpleExpression (106)
        on left: 75 76 77 78 79 80
        on right: 68 69 70 71 72 73 74 76 77 78 79 80
    term (107)
        on left: 81 82 83 84 85 86
        on right: 75 76 77 78 79 80 82 83 84 85 86
    factor (108)
        on left: 87 88 89 90 91 92
        on right: 81 82 83 84 85 86 88 89 90
    value (109)
        on left: 93 94 95 96
        on right: 91
    assignment_operators (110)
        on left: 97 98 99 100 101
        on right: 67
    relational_operators (111)
        on left: 102 103 104 105 106 107
        on right: 117
    if_statement (112)
        on left: 108
        on right: 61 112
    if_then_follow (113)
        on left: 109 110 111
        on right: 108
    else_if_block (114)
        on left: 112
        on right: 109
    else_block (115)
        on left: 113
        on right: 110
    fordo_statement (116)
        on left: 114
        on right: 62
    to_or_downto (117)
        on left: 115 116
        on right: 114
    boolean_expression (118)
        on left: 117
        on right: 108


State 0

    0 $accept: . startProg $end

    T_PROGRAM  shift, and go to state 1

    startProg       go to state 2
    program         go to state 3
    programHeading  go to state 4


State 1

    3 programHeading: T_PROGRAM . T_IDENTIFIER ';'

    T_IDENTIFIER  shift, and go to state 5


State 2

    0 $accept: startProg . $end

    $end  shift, and go to state 6


State 3

    1 startProg: program .

    $default  reduce using rule 1 (startProg)


State 4

    2 program: programHeading . block '.'

    T_USES  shift, and go to state 7

    $default  reduce using rule 6 (uses_block)

    block       go to state 8
    uses_block  go to state 9


State 5

    3 programHeading: T_PROGRAM T_IDENTIFIER . ';'

    ';'  shift, and go to state 10


State 6

    0 $accept: startProg $end .

    $default  accept


State 7

    5 uses_block: T_USES . T_IDENTIFIER other_libs ';'

    T_IDENTIFIER  shift, and go to state 11


State 8

    2 program: programHeading block . '.'

    '.'  shift, and go to state 12


State 9

    4 block: uses_block . const_block type_block variable_block function_and_procedure_block execution_block

    T_CONST  shift, and go to state 13

    $default  reduce using rule 10 (const_block)

    const_block  go to state 14


State 10

    3 programHeading: T_PROGRAM T_IDENTIFIER ';' .

    $default  reduce using rule 3 (programHeading)


State 11

    5 uses_block: T_USES T_IDENTIFIER . other_libs ';'

    ','  shift, and go to state 15

    $default  reduce using rule 8 (other_libs)

    other_libs  go to state 16


State 12

    2 program: programHeading block '.' .

    $default  reduce using rule 2 (program)


State 13

    9 const_block: T_CONST . const_definition

    T_IDENTIFIER  shift, and go to state 17

    const_definition  go to state 18


State 14

    4 block: uses_block const_block . type_block variable_block function_and_procedure_block execution_block

    T_TYPE  shift, and go to state 19

    $default  reduce using rule 18 (type_block)

    type_block  go to state 20


State 15

    7 other_libs: ',' . T_IDENTIFIER other_libs

    T_IDENTIFIER  shift, and go to state 21


State 16

    5 uses_block: T_USES T_IDENTIFIER other_libs . ';'

    ';'  shift, and go to state 22


State 17

   11 const_definition: T_IDENTIFIER . T_SINGLEEQ constant ';' more_const_definition

    T_SINGLEEQ  shift, and go to state 23


State 18

    9 const_block: T_CONST const_definition .

    $default  reduce using rule 9 (const_block)


State 19

   17 type_block: T_TYPE . type_definition

    T_IDENTIFIER  shift, and go to state 24

    $default  reduce using rule 22 (type_definition)

    type_definition  go to state 25


State 20

    4 block: uses_block const_block type_block . variable_block function_and_procedure_block execution_block

    T_VAR  shift, and go to state 26

    $default  reduce using rule 27 (variable_block)

    variable_block  go to state 27


State 21

    7 other_libs: ',' T_IDENTIFIER . other_libs

    ','  shift, and go to state 15

    $default  reduce using rule 8 (other_libs)

    other_libs  go to state 28


State 22

    5 uses_block: T_USES T_IDENTIFIER other_libs ';' .

    $default  reduce using rule 5 (uses_block)


State 23

   11 const_definition: T_IDENTIFIER T_SINGLEEQ . constant ';' more_const_definition

    T_INTVAL    shift, and go to state 29
    T_BOOLVAL   shift, and go to state 30
    T_FLOATVAL  shift, and go to state 31

    constant  go to state 32


State 24

   21 type_definition: T_IDENTIFIER . $@1 more_type_identifiers T_SINGLEEQ T_DATATYPE $@2 ';' type_definition

    $default  reduce using rule 19 ($@1)

    $@1  go to state 33


State 25

   17 type_block: T_TYPE type_definition .

    $default  reduce using rule 17 (type_block)


State 26

   26 variable_block: T_VAR . decl_stmts

    T_IDENTIFIER  shift, and go to state 34

    $default  reduce using rule 30 (decl_stmts)

    decl_stmts  go to state 35


State 27

    4 block: uses_block const_block type_block variable_block . function_and_procedure_block execution_block

    T_FUNCTION   shift, and go to state 36
    T_PROCEDURE  shift, and go to state 37

    $default  reduce using rule 39 (function_and_procedure_block)

    function_and_procedure_block  go to state 38
    procedure_block               go to state 39
    function_block                go to state 40


State 28

    7 other_libs: ',' T_IDENTIFIER other_libs .

    $default  reduce using rule 7 (other_libs)


State 29

   12 constant: T_INTVAL .

    $default  reduce using rule 12 (constant)


State 30

   13 constant: T_BOOLVAL .

    $default  reduce using rule 13 (constant)


State 31

   14 constant: T_FLOATVAL .

    $default  reduce using rule 14 (constant)


State 32

   11 const_definition: T_IDENTIFIER T_SINGLEEQ constant . ';' more_const_definition

    ';'  shift, and go to state 41


State 33

   21 type_definition: T_IDENTIFIER $@1 . more_type_identifiers T_SINGLEEQ T_DATATYPE $@2 ';' type_definition

    ','  shift, and go to state 42

    $default  reduce using rule 25 (more_type_identifiers)

    more_type_identifiers  go to state 43


State 34

   29 decl_stmts: T_IDENTIFIER . $@4 more_decl_stmt ':' data_type ';'

    $default  reduce using rule 28 ($@4)

    $@4  go to state 44


State 35

   26 variable_block: T_VAR decl_stmts .

    $default  reduce using rule 26 (variable_block)


State 36

   48 function_block: T_FUNCTION . T_IDENTIFIER $@8 ':' T_DATATYPE ';' block ';'
   50               | T_FUNCTION . T_IDENTIFIER $@9 '(' function_param_list ')' ':' T_DATATYPE ';' block ';'

    T_IDENTIFIER  shift, and go to state 45


State 37

   41 procedure_block: T_PROCEDURE . T_IDENTIFIER $@6 ';' block ';'
   43                | T_PROCEDURE . T_IDENTIFIER $@7 '(' param_list ')' ';' block ';'

    T_IDENTIFIER  shift, and go to state 46


State 38

    4 block: uses_block const_block type_block variable_block function_and_procedure_block . execution_block

    T_BEGIN  shift, and go to state 47

    execution_block  go to state 48


State 39

   38 function_and_procedure_block: procedure_block . function_and_procedure_block

    T_FUNCTION   shift, and go to state 36
    T_PROCEDURE  shift, and go to state 37

    $default  reduce using rule 39 (function_and_procedure_block)

    function_and_procedure_block  go to state 49
    procedure_block               go to state 39
    function_block                go to state 40


State 40

   37 function_and_procedure_block: function_block . function_and_procedure_block

    T_FUNCTION   shift, and go to state 36
    T_PROCEDURE  shift, and go to state 37

    $default  reduce using rule 39 (function_and_procedure_block)

    function_and_procedure_block  go to state 50
    procedure_block               go to state 39
    function_block                go to state 40


State 41

   11 const_definition: T_IDENTIFIER T_SINGLEEQ constant ';' . more_const_definition

    T_IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 16 (more_const_definition)

    more_const_definition  go to state 52


State 42

   24 more_type_identifiers: ',' . T_IDENTIFIER $@3 more_type_identifiers

    T_IDENTIFIER  shift, and go to state 53


State 43

   21 type_definition: T_IDENTIFIER $@1 more_type_identifiers . T_SINGLEEQ T_DATATYPE $@2 ';' type_definition

    T_SINGLEEQ  shift, and go to state 54


State 44

   29 decl_stmts: T_IDENTIFIER $@4 . more_decl_stmt ':' data_type ';'

    ','  shift, and go to state 55

    $default  reduce using rule 33 (more_decl_stmt)

    more_decl_stmt  go to state 56


State 45

   48 function_block: T_FUNCTION T_IDENTIFIER . $@8 ':' T_DATATYPE ';' block ';'
   50               | T_FUNCTION T_IDENTIFIER . $@9 '(' function_param_list ')' ':' T_DATATYPE ';' block ';'

    '('       reduce using rule 49 ($@9)
    $default  reduce using rule 47 ($@8)

    $@8  go to state 57
    $@9  go to state 58


State 46

   41 procedure_block: T_PROCEDURE T_IDENTIFIER . $@6 ';' block ';'
   43                | T_PROCEDURE T_IDENTIFIER . $@7 '(' param_list ')' ';' block ';'

    '('       reduce using rule 42 ($@7)
    $default  reduce using rule 40 ($@6)

    $@6  go to state 59
    $@7  go to state 60


State 47

   59 execution_block: T_BEGIN . execution_body T_END

    $default  reduce using rule 64 (execution_body)

    execution_body  go to state 61


State 48

    4 block: uses_block const_block type_block variable_block function_and_procedure_block execution_block .

    $default  reduce using rule 4 (block)


State 49

   38 function_and_procedure_block: procedure_block function_and_procedure_block .

    $default  reduce using rule 38 (function_and_procedure_block)


State 50

   37 function_and_procedure_block: function_block function_and_procedure_block .

    $default  reduce using rule 37 (function_and_procedure_block)


State 51

   15 more_const_definition: T_IDENTIFIER . T_SINGLEEQ constant ';' more_const_definition

    T_SINGLEEQ  shift, and go to state 62


State 52

   11 const_definition: T_IDENTIFIER T_SINGLEEQ constant ';' more_const_definition .

    $default  reduce using rule 11 (const_definition)


State 53

   24 more_type_identifiers: ',' T_IDENTIFIER . $@3 more_type_identifiers

    $default  reduce using rule 23 ($@3)

    $@3  go to state 63


State 54

   21 type_definition: T_IDENTIFIER $@1 more_type_identifiers T_SINGLEEQ . T_DATATYPE $@2 ';' type_definition

    T_DATATYPE  shift, and go to state 64


State 55

   32 more_decl_stmt: ',' . T_IDENTIFIER $@5 more_decl_stmt

    T_IDENTIFIER  shift, and go to state 65


State 56

   29 decl_stmts: T_IDENTIFIER $@4 more_decl_stmt . ':' data_type ';'

    ':'  shift, and go to state 66


State 57

   48 function_block: T_FUNCTION T_IDENTIFIER $@8 . ':' T_DATATYPE ';' block ';'

    ':'  shift, and go to state 67


State 58

   50 function_block: T_FUNCTION T_IDENTIFIER $@9 . '(' function_param_list ')' ':' T_DATATYPE ';' block ';'

    '('  shift, and go to state 68


State 59

   41 procedure_block: T_PROCEDURE T_IDENTIFIER $@6 . ';' block ';'

    ';'  shift, and go to state 69


State 60

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@7 . '(' param_list ')' ';' block ';'

    '('  shift, and go to state 70


State 61

   59 execution_block: T_BEGIN execution_body . T_END
   60 execution_body: execution_body . assignment_statements
   61               | execution_body . if_statement
   62               | execution_body . fordo_statement
   63               | execution_body . print_statements

    T_IDENTIFIER  shift, and go to state 71
    T_END         shift, and go to state 72
    T_IF          shift, and go to state 73
    T_FOR         shift, and go to state 74
    T_WRITELN     shift, and go to state 75

    print_statements       go to state 76
    assignment_statements  go to state 77
    if_statement           go to state 78
    fordo_statement        go to state 79


State 62

   15 more_const_definition: T_IDENTIFIER T_SINGLEEQ . constant ';' more_const_definition

    T_INTVAL    shift, and go to state 29
    T_BOOLVAL   shift, and go to state 30
    T_FLOATVAL  shift, and go to state 31

    constant  go to state 80


State 63

   24 more_type_identifiers: ',' T_IDENTIFIER $@3 . more_type_identifiers

    ','  shift, and go to state 42

    $default  reduce using rule 25 (more_type_identifiers)

    more_type_identifiers  go to state 81


State 64

   21 type_definition: T_IDENTIFIER $@1 more_type_identifiers T_SINGLEEQ T_DATATYPE . $@2 ';' type_definition

    $default  reduce using rule 20 ($@2)

    $@2  go to state 82


State 65

   32 more_decl_stmt: ',' T_IDENTIFIER . $@5 more_decl_stmt

    $default  reduce using rule 31 ($@5)

    $@5  go to state 83


State 66

   29 decl_stmts: T_IDENTIFIER $@4 more_decl_stmt ':' . data_type ';'

    T_IDENTIFIER  shift, and go to state 84
    T_TYPE        shift, and go to state 85
    T_ARRAY       shift, and go to state 86

    data_type  go to state 87


State 67

   48 function_block: T_FUNCTION T_IDENTIFIER $@8 ':' . T_DATATYPE ';' block ';'

    T_DATATYPE  shift, and go to state 88


State 68

   50 function_block: T_FUNCTION T_IDENTIFIER $@9 '(' . function_param_list ')' ':' T_DATATYPE ';' block ';'

    T_IDENTIFIER  shift, and go to state 89

    function_param_list  go to state 90


State 69

   41 procedure_block: T_PROCEDURE T_IDENTIFIER $@6 ';' . block ';'

    T_USES  shift, and go to state 7

    $default  reduce using rule 6 (uses_block)

    block       go to state 91
    uses_block  go to state 9


State 70

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@7 '(' . param_list ')' ';' block ';'

    T_IDENTIFIER  shift, and go to state 92

    $default  reduce using rule 46 (param_list)

    param_list  go to state 93


State 71

   67 assignment_statements: T_IDENTIFIER . $@13 assignment_operators expression

    $default  reduce using rule 66 ($@13)

    $@13  go to state 94


State 72

   59 execution_block: T_BEGIN execution_body T_END .

    $default  reduce using rule 59 (execution_block)


State 73

  108 if_statement: T_IF . '(' boolean_expression ')' T_THEN execution_body if_then_follow

    '('  shift, and go to state 95


State 74

  114 fordo_statement: T_FOR . T_IDENTIFIER T_ASOP expression to_or_downto expression T_DO execution_body

    T_IDENTIFIER  shift, and go to state 96


State 75

   65 print_statements: T_WRITELN . '(' T_STRINGVAL ')' ';'

    '('  shift, and go to state 97


State 76

   63 execution_body: execution_body print_statements .

    $default  reduce using rule 63 (execution_body)


State 77

   60 execution_body: execution_body assignment_statements .

    $default  reduce using rule 60 (execution_body)


State 78

   61 execution_body: execution_body if_statement .

    $default  reduce using rule 61 (execution_body)


State 79

   62 execution_body: execution_body fordo_statement .

    $default  reduce using rule 62 (execution_body)


State 80

   15 more_const_definition: T_IDENTIFIER T_SINGLEEQ constant . ';' more_const_definition

    ';'  shift, and go to state 98


State 81

   24 more_type_identifiers: ',' T_IDENTIFIER $@3 more_type_identifiers .

    $default  reduce using rule 24 (more_type_identifiers)


State 82

   21 type_definition: T_IDENTIFIER $@1 more_type_identifiers T_SINGLEEQ T_DATATYPE $@2 . ';' type_definition

    ';'  shift, and go to state 99


State 83

   32 more_decl_stmt: ',' T_IDENTIFIER $@5 . more_decl_stmt

    ','  shift, and go to state 55

    $default  reduce using rule 33 (more_decl_stmt)

    more_decl_stmt  go to state 100


State 84

   35 data_type: T_IDENTIFIER .

    $default  reduce using rule 35 (data_type)


State 85

   34 data_type: T_TYPE .

    $default  reduce using rule 34 (data_type)


State 86

   36 data_type: T_ARRAY . '[' T_INDEXTYPE ']' T_OF T_DATATYPE

    '['  shift, and go to state 101


State 87

   29 decl_stmts: T_IDENTIFIER $@4 more_decl_stmt ':' data_type . ';'

    ';'  shift, and go to state 102


State 88

   48 function_block: T_FUNCTION T_IDENTIFIER $@8 ':' T_DATATYPE . ';' block ';'

    ';'  shift, and go to state 103


State 89

   53 function_param_list: T_IDENTIFIER . $@10 more_func_identifiers ':' T_DATATYPE $@11 function_param_continue

    $default  reduce using rule 51 ($@10)

    $@10  go to state 104


State 90

   50 function_block: T_FUNCTION T_IDENTIFIER $@9 '(' function_param_list . ')' ':' T_DATATYPE ';' block ';'

    ')'  shift, and go to state 105


State 91

   41 procedure_block: T_PROCEDURE T_IDENTIFIER $@6 ';' block . ';'

    ';'  shift, and go to state 106


State 92

   44 param_list: T_IDENTIFIER . ':' T_DATATYPE
   45           | T_IDENTIFIER . ':' T_DATATYPE ';' param_list

    ':'  shift, and go to state 107


State 93

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@7 '(' param_list . ')' ';' block ';'

    ')'  shift, and go to state 108


State 94

   67 assignment_statements: T_IDENTIFIER $@13 . assignment_operators expression

    T_ASOP     shift, and go to state 109
    T_AS_PE    shift, and go to state 110
    T_AS_SE    shift, and go to state 111
    T_AS_MULE  shift, and go to state 112
    T_AS_DIVE  shift, and go to state 113

    assignment_operators  go to state 114


State 95

  108 if_statement: T_IF '(' . boolean_expression ')' T_THEN execution_body if_then_follow

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    expression          go to state 124
    simpleExpression    go to state 125
    term                go to state 126
    factor              go to state 127
    value               go to state 128
    boolean_expression  go to state 129


State 96

  114 fordo_statement: T_FOR T_IDENTIFIER . T_ASOP expression to_or_downto expression T_DO execution_body

    T_ASOP  shift, and go to state 130


State 97

   65 print_statements: T_WRITELN '(' . T_STRINGVAL ')' ';'

    T_STRINGVAL  shift, and go to state 131


State 98

   15 more_const_definition: T_IDENTIFIER T_SINGLEEQ constant ';' . more_const_definition

    T_IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 16 (more_const_definition)

    more_const_definition  go to state 132


State 99

   21 type_definition: T_IDENTIFIER $@1 more_type_identifiers T_SINGLEEQ T_DATATYPE $@2 ';' . type_definition

    T_IDENTIFIER  shift, and go to state 24

    $default  reduce using rule 22 (type_definition)

    type_definition  go to state 133


State 100

   32 more_decl_stmt: ',' T_IDENTIFIER $@5 more_decl_stmt .

    $default  reduce using rule 32 (more_decl_stmt)


State 101

   36 data_type: T_ARRAY '[' . T_INDEXTYPE ']' T_OF T_DATATYPE

    T_INDEXTYPE  shift, and go to state 134


State 102

   29 decl_stmts: T_IDENTIFIER $@4 more_decl_stmt ':' data_type ';' .

    $default  reduce using rule 29 (decl_stmts)


State 103

   48 function_block: T_FUNCTION T_IDENTIFIER $@8 ':' T_DATATYPE ';' . block ';'

    T_USES  shift, and go to state 7

    $default  reduce using rule 6 (uses_block)

    block       go to state 135
    uses_block  go to state 9


State 104

   53 function_param_list: T_IDENTIFIER $@10 . more_func_identifiers ':' T_DATATYPE $@11 function_param_continue

    ','  shift, and go to state 136

    $default  reduce using rule 58 (more_func_identifiers)

    more_func_identifiers  go to state 137


State 105

   50 function_block: T_FUNCTION T_IDENTIFIER $@9 '(' function_param_list ')' . ':' T_DATATYPE ';' block ';'

    ':'  shift, and go to state 138


State 106

   41 procedure_block: T_PROCEDURE T_IDENTIFIER $@6 ';' block ';' .

    $default  reduce using rule 41 (procedure_block)


State 107

   44 param_list: T_IDENTIFIER ':' . T_DATATYPE
   45           | T_IDENTIFIER ':' . T_DATATYPE ';' param_list

    T_DATATYPE  shift, and go to state 139


State 108

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@7 '(' param_list ')' . ';' block ';'

    ';'  shift, and go to state 140


State 109

   97 assignment_operators: T_ASOP .

    $default  reduce using rule 97 (assignment_operators)


State 110

   98 assignment_operators: T_AS_PE .

    $default  reduce using rule 98 (assignment_operators)


State 111

   99 assignment_operators: T_AS_SE .

    $default  reduce using rule 99 (assignment_operators)


State 112

  100 assignment_operators: T_AS_MULE .

    $default  reduce using rule 100 (assignment_operators)


State 113

  101 assignment_operators: T_AS_DIVE .

    $default  reduce using rule 101 (assignment_operators)


State 114

   67 assignment_statements: T_IDENTIFIER $@13 assignment_operators . expression

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    expression        go to state 141
    simpleExpression  go to state 125
    term              go to state 126
    factor            go to state 127
    value             go to state 128


State 115

   92 factor: T_IDENTIFIER .

    $default  reduce using rule 92 (factor)


State 116

   93 value: T_INTVAL .

    $default  reduce using rule 93 (value)


State 117

   95 value: T_BOOLVAL .

    $default  reduce using rule 95 (value)


State 118

   94 value: T_FLOATVAL .

    $default  reduce using rule 94 (value)


State 119

   96 value: T_STRINGVAL .

    $default  reduce using rule 96 (value)


State 120

   90 factor: T_BOOL_NOT . factor

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    factor  go to state 142
    value   go to state 128


State 121

   88 factor: '+' . factor

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    factor  go to state 143
    value   go to state 128


State 122

   89 factor: '-' . factor

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    factor  go to state 144
    value   go to state 128


State 123

   87 factor: '(' . expression ')'

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    expression        go to state 145
    simpleExpression  go to state 125
    term              go to state 126
    factor            go to state 127
    value             go to state 128


State 124

  117 boolean_expression: expression . relational_operators expression

    T_SINGLEEQ  shift, and go to state 146
    T_GE        shift, and go to state 147
    T_LE        shift, and go to state 148
    T_NE        shift, and go to state 149
    '<'         shift, and go to state 150
    '>'         shift, and go to state 151

    relational_operators  go to state 152


State 125

   68 expression: simpleExpression .
   69           | simpleExpression . T_SINGLEEQ simpleExpression
   70           | simpleExpression . T_NE simpleExpression
   71           | simpleExpression . '<' simpleExpression
   72           | simpleExpression . T_LE simpleExpression
   73           | simpleExpression . '>' simpleExpression
   74           | simpleExpression . T_GE simpleExpression
   76 simpleExpression: simpleExpression . '+' term
   77                 | simpleExpression . '-' term
   78                 | simpleExpression . T_BOOL_OR term
   79                 | simpleExpression . '|' term
   80                 | simpleExpression . '!' term

    T_SINGLEEQ  shift, and go to state 153
    T_GE        shift, and go to state 154
    T_LE        shift, and go to state 155
    T_NE        shift, and go to state 156
    T_BOOL_OR   shift, and go to state 157
    '+'         shift, and go to state 158
    '-'         shift, and go to state 159
    '<'         shift, and go to state 160
    '>'         shift, and go to state 161
    '|'         shift, and go to state 162
    '!'         shift, and go to state 163

    T_SINGLEEQ  [reduce using rule 68 (expression)]
    T_GE        [reduce using rule 68 (expression)]
    T_LE        [reduce using rule 68 (expression)]
    T_NE        [reduce using rule 68 (expression)]
    '<'         [reduce using rule 68 (expression)]
    '>'         [reduce using rule 68 (expression)]
    $default    reduce using rule 68 (expression)


State 126

   75 simpleExpression: term .
   82 term: term . '*' factor
   83     | term . '/' factor
   84     | term . '%' factor
   85     | term . T_BOOL_AND factor
   86     | term . '&' factor

    T_BOOL_AND  shift, and go to state 164
    '*'         shift, and go to state 165
    '/'         shift, and go to state 166
    '%'         shift, and go to state 167
    '&'         shift, and go to state 168

    $default  reduce using rule 75 (simpleExpression)


State 127

   81 term: factor .

    $default  reduce using rule 81 (term)


State 128

   91 factor: value .

    $default  reduce using rule 91 (factor)


State 129

  108 if_statement: T_IF '(' boolean_expression . ')' T_THEN execution_body if_then_follow

    ')'  shift, and go to state 169


State 130

  114 fordo_statement: T_FOR T_IDENTIFIER T_ASOP . expression to_or_downto expression T_DO execution_body

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    expression        go to state 170
    simpleExpression  go to state 125
    term              go to state 126
    factor            go to state 127
    value             go to state 128


State 131

   65 print_statements: T_WRITELN '(' T_STRINGVAL . ')' ';'

    ')'  shift, and go to state 171


State 132

   15 more_const_definition: T_IDENTIFIER T_SINGLEEQ constant ';' more_const_definition .

    $default  reduce using rule 15 (more_const_definition)


State 133

   21 type_definition: T_IDENTIFIER $@1 more_type_identifiers T_SINGLEEQ T_DATATYPE $@2 ';' type_definition .

    $default  reduce using rule 21 (type_definition)


State 134

   36 data_type: T_ARRAY '[' T_INDEXTYPE . ']' T_OF T_DATATYPE

    ']'  shift, and go to state 172


State 135

   48 function_block: T_FUNCTION T_IDENTIFIER $@8 ':' T_DATATYPE ';' block . ';'

    ';'  shift, and go to state 173


State 136

   57 more_func_identifiers: ',' . T_IDENTIFIER $@12 more_func_identifiers

    T_IDENTIFIER  shift, and go to state 174


State 137

   53 function_param_list: T_IDENTIFIER $@10 more_func_identifiers . ':' T_DATATYPE $@11 function_param_continue

    ':'  shift, and go to state 175


State 138

   50 function_block: T_FUNCTION T_IDENTIFIER $@9 '(' function_param_list ')' ':' . T_DATATYPE ';' block ';'

    T_DATATYPE  shift, and go to state 176


State 139

   44 param_list: T_IDENTIFIER ':' T_DATATYPE .
   45           | T_IDENTIFIER ':' T_DATATYPE . ';' param_list

    ';'  shift, and go to state 177

    $default  reduce using rule 44 (param_list)


State 140

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@7 '(' param_list ')' ';' . block ';'

    T_USES  shift, and go to state 7

    $default  reduce using rule 6 (uses_block)

    block       go to state 178
    uses_block  go to state 9


State 141

   67 assignment_statements: T_IDENTIFIER $@13 assignment_operators expression .

    $default  reduce using rule 67 (assignment_statements)


State 142

   90 factor: T_BOOL_NOT factor .

    $default  reduce using rule 90 (factor)


State 143

   88 factor: '+' factor .

    $default  reduce using rule 88 (factor)


State 144

   89 factor: '-' factor .

    $default  reduce using rule 89 (factor)


State 145

   87 factor: '(' expression . ')'

    ')'  shift, and go to state 179


State 146

  102 relational_operators: T_SINGLEEQ .

    $default  reduce using rule 102 (relational_operators)


State 147

  105 relational_operators: T_GE .

    $default  reduce using rule 105 (relational_operators)


State 148

  106 relational_operators: T_LE .

    $default  reduce using rule 106 (relational_operators)


State 149

  107 relational_operators: T_NE .

    $default  reduce using rule 107 (relational_operators)


State 150

  104 relational_operators: '<' .

    $default  reduce using rule 104 (relational_operators)


State 151

  103 relational_operators: '>' .

    $default  reduce using rule 103 (relational_operators)


State 152

  117 boolean_expression: expression relational_operators . expression

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    expression        go to state 180
    simpleExpression  go to state 125
    term              go to state 126
    factor            go to state 127
    value             go to state 128


State 153

   69 expression: simpleExpression T_SINGLEEQ . simpleExpression

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    simpleExpression  go to state 181
    term              go to state 126
    factor            go to state 127
    value             go to state 128


State 154

   74 expression: simpleExpression T_GE . simpleExpression

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    simpleExpression  go to state 182
    term              go to state 126
    factor            go to state 127
    value             go to state 128


State 155

   72 expression: simpleExpression T_LE . simpleExpression

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    simpleExpression  go to state 183
    term              go to state 126
    factor            go to state 127
    value             go to state 128


State 156

   70 expression: simpleExpression T_NE . simpleExpression

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    simpleExpression  go to state 184
    term              go to state 126
    factor            go to state 127
    value             go to state 128


State 157

   78 simpleExpression: simpleExpression T_BOOL_OR . term

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    term    go to state 185
    factor  go to state 127
    value   go to state 128


State 158

   76 simpleExpression: simpleExpression '+' . term

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    term    go to state 186
    factor  go to state 127
    value   go to state 128


State 159

   77 simpleExpression: simpleExpression '-' . term

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    term    go to state 187
    factor  go to state 127
    value   go to state 128


State 160

   71 expression: simpleExpression '<' . simpleExpression

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    simpleExpression  go to state 188
    term              go to state 126
    factor            go to state 127
    value             go to state 128


State 161

   73 expression: simpleExpression '>' . simpleExpression

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    simpleExpression  go to state 189
    term              go to state 126
    factor            go to state 127
    value             go to state 128


State 162

   79 simpleExpression: simpleExpression '|' . term

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    term    go to state 190
    factor  go to state 127
    value   go to state 128


State 163

   80 simpleExpression: simpleExpression '!' . term

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    term    go to state 191
    factor  go to state 127
    value   go to state 128


State 164

   85 term: term T_BOOL_AND . factor

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    factor  go to state 192
    value   go to state 128


State 165

   82 term: term '*' . factor

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    factor  go to state 193
    value   go to state 128


State 166

   83 term: term '/' . factor

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    factor  go to state 194
    value   go to state 128


State 167

   84 term: term '%' . factor

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    factor  go to state 195
    value   go to state 128


State 168

   86 term: term '&' . factor

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    factor  go to state 196
    value   go to state 128


State 169

  108 if_statement: T_IF '(' boolean_expression ')' . T_THEN execution_body if_then_follow

    T_THEN  shift, and go to state 197


State 170

  114 fordo_statement: T_FOR T_IDENTIFIER T_ASOP expression . to_or_downto expression T_DO execution_body

    T_TO      shift, and go to state 198
    T_DOWNTO  shift, and go to state 199

    to_or_downto  go to state 200


State 171

   65 print_statements: T_WRITELN '(' T_STRINGVAL ')' . ';'

    ';'  shift, and go to state 201


State 172

   36 data_type: T_ARRAY '[' T_INDEXTYPE ']' . T_OF T_DATATYPE

    T_OF  shift, and go to state 202


State 173

   48 function_block: T_FUNCTION T_IDENTIFIER $@8 ':' T_DATATYPE ';' block ';' .

    $default  reduce using rule 48 (function_block)


State 174

   57 more_func_identifiers: ',' T_IDENTIFIER . $@12 more_func_identifiers

    $default  reduce using rule 56 ($@12)

    $@12  go to state 203


State 175

   53 function_param_list: T_IDENTIFIER $@10 more_func_identifiers ':' . T_DATATYPE $@11 function_param_continue

    T_DATATYPE  shift, and go to state 204


State 176

   50 function_block: T_FUNCTION T_IDENTIFIER $@9 '(' function_param_list ')' ':' T_DATATYPE . ';' block ';'

    ';'  shift, and go to state 205


State 177

   45 param_list: T_IDENTIFIER ':' T_DATATYPE ';' . param_list

    T_IDENTIFIER  shift, and go to state 92

    $default  reduce using rule 46 (param_list)

    param_list  go to state 206


State 178

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@7 '(' param_list ')' ';' block . ';'

    ';'  shift, and go to state 207


State 179

   87 factor: '(' expression ')' .

    $default  reduce using rule 87 (factor)


State 180

  117 boolean_expression: expression relational_operators expression .

    $default  reduce using rule 117 (boolean_expression)


State 181

   69 expression: simpleExpression T_SINGLEEQ simpleExpression .
   76 simpleExpression: simpleExpression . '+' term
   77                 | simpleExpression . '-' term
   78                 | simpleExpression . T_BOOL_OR term
   79                 | simpleExpression . '|' term
   80                 | simpleExpression . '!' term

    T_BOOL_OR  shift, and go to state 157
    '+'        shift, and go to state 158
    '-'        shift, and go to state 159
    '|'        shift, and go to state 162
    '!'        shift, and go to state 163

    $default  reduce using rule 69 (expression)


State 182

   74 expression: simpleExpression T_GE simpleExpression .
   76 simpleExpression: simpleExpression . '+' term
   77                 | simpleExpression . '-' term
   78                 | simpleExpression . T_BOOL_OR term
   79                 | simpleExpression . '|' term
   80                 | simpleExpression . '!' term

    T_BOOL_OR  shift, and go to state 157
    '+'        shift, and go to state 158
    '-'        shift, and go to state 159
    '|'        shift, and go to state 162
    '!'        shift, and go to state 163

    $default  reduce using rule 74 (expression)


State 183

   72 expression: simpleExpression T_LE simpleExpression .
   76 simpleExpression: simpleExpression . '+' term
   77                 | simpleExpression . '-' term
   78                 | simpleExpression . T_BOOL_OR term
   79                 | simpleExpression . '|' term
   80                 | simpleExpression . '!' term

    T_BOOL_OR  shift, and go to state 157
    '+'        shift, and go to state 158
    '-'        shift, and go to state 159
    '|'        shift, and go to state 162
    '!'        shift, and go to state 163

    $default  reduce using rule 72 (expression)


State 184

   70 expression: simpleExpression T_NE simpleExpression .
   76 simpleExpression: simpleExpression . '+' term
   77                 | simpleExpression . '-' term
   78                 | simpleExpression . T_BOOL_OR term
   79                 | simpleExpression . '|' term
   80                 | simpleExpression . '!' term

    T_BOOL_OR  shift, and go to state 157
    '+'        shift, and go to state 158
    '-'        shift, and go to state 159
    '|'        shift, and go to state 162
    '!'        shift, and go to state 163

    $default  reduce using rule 70 (expression)


State 185

   78 simpleExpression: simpleExpression T_BOOL_OR term .
   82 term: term . '*' factor
   83     | term . '/' factor
   84     | term . '%' factor
   85     | term . T_BOOL_AND factor
   86     | term . '&' factor

    T_BOOL_AND  shift, and go to state 164
    '*'         shift, and go to state 165
    '/'         shift, and go to state 166
    '%'         shift, and go to state 167
    '&'         shift, and go to state 168

    $default  reduce using rule 78 (simpleExpression)


State 186

   76 simpleExpression: simpleExpression '+' term .
   82 term: term . '*' factor
   83     | term . '/' factor
   84     | term . '%' factor
   85     | term . T_BOOL_AND factor
   86     | term . '&' factor

    T_BOOL_AND  shift, and go to state 164
    '*'         shift, and go to state 165
    '/'         shift, and go to state 166
    '%'         shift, and go to state 167
    '&'         shift, and go to state 168

    $default  reduce using rule 76 (simpleExpression)


State 187

   77 simpleExpression: simpleExpression '-' term .
   82 term: term . '*' factor
   83     | term . '/' factor
   84     | term . '%' factor
   85     | term . T_BOOL_AND factor
   86     | term . '&' factor

    T_BOOL_AND  shift, and go to state 164
    '*'         shift, and go to state 165
    '/'         shift, and go to state 166
    '%'         shift, and go to state 167
    '&'         shift, and go to state 168

    $default  reduce using rule 77 (simpleExpression)


State 188

   71 expression: simpleExpression '<' simpleExpression .
   76 simpleExpression: simpleExpression . '+' term
   77                 | simpleExpression . '-' term
   78                 | simpleExpression . T_BOOL_OR term
   79                 | simpleExpression . '|' term
   80                 | simpleExpression . '!' term

    T_BOOL_OR  shift, and go to state 157
    '+'        shift, and go to state 158
    '-'        shift, and go to state 159
    '|'        shift, and go to state 162
    '!'        shift, and go to state 163

    $default  reduce using rule 71 (expression)


State 189

   73 expression: simpleExpression '>' simpleExpression .
   76 simpleExpression: simpleExpression . '+' term
   77                 | simpleExpression . '-' term
   78                 | simpleExpression . T_BOOL_OR term
   79                 | simpleExpression . '|' term
   80                 | simpleExpression . '!' term

    T_BOOL_OR  shift, and go to state 157
    '+'        shift, and go to state 158
    '-'        shift, and go to state 159
    '|'        shift, and go to state 162
    '!'        shift, and go to state 163

    $default  reduce using rule 73 (expression)


State 190

   79 simpleExpression: simpleExpression '|' term .
   82 term: term . '*' factor
   83     | term . '/' factor
   84     | term . '%' factor
   85     | term . T_BOOL_AND factor
   86     | term . '&' factor

    T_BOOL_AND  shift, and go to state 164
    '*'         shift, and go to state 165
    '/'         shift, and go to state 166
    '%'         shift, and go to state 167
    '&'         shift, and go to state 168

    $default  reduce using rule 79 (simpleExpression)


State 191

   80 simpleExpression: simpleExpression '!' term .
   82 term: term . '*' factor
   83     | term . '/' factor
   84     | term . '%' factor
   85     | term . T_BOOL_AND factor
   86     | term . '&' factor

    T_BOOL_AND  shift, and go to state 164
    '*'         shift, and go to state 165
    '/'         shift, and go to state 166
    '%'         shift, and go to state 167
    '&'         shift, and go to state 168

    $default  reduce using rule 80 (simpleExpression)


State 192

   85 term: term T_BOOL_AND factor .

    $default  reduce using rule 85 (term)


State 193

   82 term: term '*' factor .

    $default  reduce using rule 82 (term)


State 194

   83 term: term '/' factor .

    $default  reduce using rule 83 (term)


State 195

   84 term: term '%' factor .

    $default  reduce using rule 84 (term)


State 196

   86 term: term '&' factor .

    $default  reduce using rule 86 (term)


State 197

  108 if_statement: T_IF '(' boolean_expression ')' T_THEN . execution_body if_then_follow

    $default  reduce using rule 64 (execution_body)

    execution_body  go to state 208


State 198

  115 to_or_downto: T_TO .

    $default  reduce using rule 115 (to_or_downto)


State 199

  116 to_or_downto: T_DOWNTO .

    $default  reduce using rule 116 (to_or_downto)


State 200

  114 fordo_statement: T_FOR T_IDENTIFIER T_ASOP expression to_or_downto . expression T_DO execution_body

    T_IDENTIFIER  shift, and go to state 115
    T_INTVAL      shift, and go to state 116
    T_BOOLVAL     shift, and go to state 117
    T_FLOATVAL    shift, and go to state 118
    T_STRINGVAL   shift, and go to state 119
    T_BOOL_NOT    shift, and go to state 120
    '+'           shift, and go to state 121
    '-'           shift, and go to state 122
    '('           shift, and go to state 123

    expression        go to state 209
    simpleExpression  go to state 125
    term              go to state 126
    factor            go to state 127
    value             go to state 128


State 201

   65 print_statements: T_WRITELN '(' T_STRINGVAL ')' ';' .

    $default  reduce using rule 65 (print_statements)


State 202

   36 data_type: T_ARRAY '[' T_INDEXTYPE ']' T_OF . T_DATATYPE

    T_DATATYPE  shift, and go to state 210


State 203

   57 more_func_identifiers: ',' T_IDENTIFIER $@12 . more_func_identifiers

    ','  shift, and go to state 136

    $default  reduce using rule 58 (more_func_identifiers)

    more_func_identifiers  go to state 211


State 204

   53 function_param_list: T_IDENTIFIER $@10 more_func_identifiers ':' T_DATATYPE . $@11 function_param_continue

    $default  reduce using rule 52 ($@11)

    $@11  go to state 212


State 205

   50 function_block: T_FUNCTION T_IDENTIFIER $@9 '(' function_param_list ')' ':' T_DATATYPE ';' . block ';'

    T_USES  shift, and go to state 7

    $default  reduce using rule 6 (uses_block)

    block       go to state 213
    uses_block  go to state 9


State 206

   45 param_list: T_IDENTIFIER ':' T_DATATYPE ';' param_list .

    $default  reduce using rule 45 (param_list)


State 207

   43 procedure_block: T_PROCEDURE T_IDENTIFIER $@7 '(' param_list ')' ';' block ';' .

    $default  reduce using rule 43 (procedure_block)


State 208

   60 execution_body: execution_body . assignment_statements
   61               | execution_body . if_statement
   62               | execution_body . fordo_statement
   63               | execution_body . print_statements
  108 if_statement: T_IF '(' boolean_expression ')' T_THEN execution_body . if_then_follow

    T_IDENTIFIER  shift, and go to state 71
    T_IF          shift, and go to state 73
    T_ELSE        shift, and go to state 214
    T_FOR         shift, and go to state 74
    T_WRITELN     shift, and go to state 75

    T_IDENTIFIER  [reduce using rule 111 (if_then_follow)]
    T_IF          [reduce using rule 111 (if_then_follow)]
    T_ELSE        [reduce using rule 111 (if_then_follow)]
    T_FOR         [reduce using rule 111 (if_then_follow)]
    T_WRITELN     [reduce using rule 111 (if_then_follow)]
    $default      reduce using rule 111 (if_then_follow)

    print_statements       go to state 76
    assignment_statements  go to state 77
    if_statement           go to state 78
    if_then_follow         go to state 215
    else_if_block          go to state 216
    else_block             go to state 217
    fordo_statement        go to state 79


State 209

  114 fordo_statement: T_FOR T_IDENTIFIER T_ASOP expression to_or_downto expression . T_DO execution_body

    T_DO  shift, and go to state 218


State 210

   36 data_type: T_ARRAY '[' T_INDEXTYPE ']' T_OF T_DATATYPE .

    $default  reduce using rule 36 (data_type)


State 211

   57 more_func_identifiers: ',' T_IDENTIFIER $@12 more_func_identifiers .

    $default  reduce using rule 57 (more_func_identifiers)


State 212

   53 function_param_list: T_IDENTIFIER $@10 more_func_identifiers ':' T_DATATYPE $@11 . function_param_continue

    ';'  shift, and go to state 219

    $default  reduce using rule 55 (function_param_continue)

    function_param_continue  go to state 220


State 213

   50 function_block: T_FUNCTION T_IDENTIFIER $@9 '(' function_param_list ')' ':' T_DATATYPE ';' block . ';'

    ';'  shift, and go to state 221


State 214

  112 else_if_block: T_ELSE . if_statement
  113 else_block: T_ELSE . execution_body

    T_IF  shift, and go to state 73

    T_IF      [reduce using rule 64 (execution_body)]
    $default  reduce using rule 64 (execution_body)

    execution_body  go to state 222
    if_statement    go to state 223


State 215

  108 if_statement: T_IF '(' boolean_expression ')' T_THEN execution_body if_then_follow .

    $default  reduce using rule 108 (if_statement)


State 216

  109 if_then_follow: else_if_block .

    $default  reduce using rule 109 (if_then_follow)


State 217

  110 if_then_follow: else_block .

    $default  reduce using rule 110 (if_then_follow)


State 218

  114 fordo_statement: T_FOR T_IDENTIFIER T_ASOP expression to_or_downto expression T_DO . execution_body

    $default  reduce using rule 64 (execution_body)

    execution_body  go to state 224


State 219

   54 function_param_continue: ';' . function_param_list

    T_IDENTIFIER  shift, and go to state 89

    function_param_list  go to state 225


State 220

   53 function_param_list: T_IDENTIFIER $@10 more_func_identifiers ':' T_DATATYPE $@11 function_param_continue .

    $default  reduce using rule 53 (function_param_list)


State 221

   50 function_block: T_FUNCTION T_IDENTIFIER $@9 '(' function_param_list ')' ':' T_DATATYPE ';' block ';' .

    $default  reduce using rule 50 (function_block)


State 222

   60 execution_body: execution_body . assignment_statements
   61               | execution_body . if_statement
   62               | execution_body . fordo_statement
   63               | execution_body . print_statements
  113 else_block: T_ELSE execution_body .

    T_IDENTIFIER  shift, and go to state 71
    T_IF          shift, and go to state 73
    T_FOR         shift, and go to state 74
    T_WRITELN     shift, and go to state 75

    T_IDENTIFIER  [reduce using rule 113 (else_block)]
    T_IF          [reduce using rule 113 (else_block)]
    T_FOR         [reduce using rule 113 (else_block)]
    T_WRITELN     [reduce using rule 113 (else_block)]
    $default      reduce using rule 113 (else_block)

    print_statements       go to state 76
    assignment_statements  go to state 77
    if_statement           go to state 78
    fordo_statement        go to state 79


State 223

  112 else_if_block: T_ELSE if_statement .

    $default  reduce using rule 112 (else_if_block)


State 224

   60 execution_body: execution_body . assignment_statements
   61               | execution_body . if_statement
   62               | execution_body . fordo_statement
   63               | execution_body . print_statements
  114 fordo_statement: T_FOR T_IDENTIFIER T_ASOP expression to_or_downto expression T_DO execution_body .

    T_IDENTIFIER  shift, and go to state 71
    T_IF          shift, and go to state 73
    T_FOR         shift, and go to state 74
    T_WRITELN     shift, and go to state 75

    T_IDENTIFIER  [reduce using rule 114 (fordo_statement)]
    T_IF          [reduce using rule 114 (fordo_statement)]
    T_FOR         [reduce using rule 114 (fordo_statement)]
    T_WRITELN     [reduce using rule 114 (fordo_statement)]
    $default      reduce using rule 114 (fordo_statement)

    print_statements       go to state 76
    assignment_statements  go to state 77
    if_statement           go to state 78
    fordo_statement        go to state 79


State 225

   54 function_param_continue: ';' function_param_list .

    $default  reduce using rule 54 (function_param_continue)
